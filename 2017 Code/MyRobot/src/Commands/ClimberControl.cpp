// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ClimberControl.h"


ClimberControl::ClimberControl(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
	Requires(Robot::climber.get());
}


// Called just before this Command runs the first time
void ClimberControl::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
// The motors will either run forward or in reverse
void ClimberControl::Execute() {
	Robot::climber->Climb();
}

// Make this return true when this Command no longer needs to run execute()
bool ClimberControl::IsFinished() {
    return false;
}

// Called once after isFinished returns true
// Should reset the Motor back to a speed of 0
void ClimberControl::End() {
	Robot::climber->InitDefaultCommand();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ClimberControl::Interrupted() {

}
