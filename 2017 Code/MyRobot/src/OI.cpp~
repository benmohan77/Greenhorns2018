// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/ChangeOrientation.h"
#include "Commands/ClimberControl.h"
#include "Commands/CogCollectorControl.h"
#include "Commands/Driving.h"
#include "Commands/Intake.h"
#include "Commands/Shooting.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    copilot.reset(new Joystick(1));
    
    shoot.reset(new JoystickButton(copilot.get(), 1));
    shoot->WhileHeld(new Shooting());
    climb.reset(new JoystickButton(copilot.get(), 1));
    climb->WhileHeld(new ClimberControl());
    cogCollectorOpen.reset(new JoystickButton(copilot.get(), 1));
    cogCollectorOpen->WhileHeld(new CogCollectorControl(0));
    openCogCollectorDoor.reset(new JoystickButton(copilot.get(), 1));
    openCogCollectorDoor->WhenPressed(new CogCollectorControl(0));
    driver.reset(new Joystick(0));
    
    reverseOrientation.reset(new JoystickButton(driver.get(), 1));
    reverseOrientation->WhenPressed(new ChangeOrientation());

    // SmartDashboard Buttons
    SmartDashboard::PutData("Shooting", new Shooting());
    SmartDashboard::PutData("Intake", new Intake());
    SmartDashboard::PutData("ClimberControl", new ClimberControl());
    SmartDashboard::PutData("CogCollectorControl", new CogCollectorControl());
    SmartDashboard::PutData("Driving", new Driving());
    SmartDashboard::PutData("ChangeOrientation", new ChangeOrientation());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getDriver() {
   return driver;
}

std::shared_ptr<Joystick> OI::getCopilot() {
   return copilot;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
