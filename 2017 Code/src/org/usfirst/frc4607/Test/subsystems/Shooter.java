// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4607.Test.subsystems;

import org.usfirst.frc4607.Test.RobotMap;
import org.usfirst.frc4607.Test.commands.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.command.PIDSubsystem;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class Shooter extends PIDSubsystem {

    public Shooter() {
		super("Shooter", 1.0, 0.0, 0.0);
		// TODO Auto-generated constructor stub
		disable();
		setAbsoluteTolerance(.2);
		
		getPIDController().setContinuous(true);
		setOutputRange(-1,1);
		setSetpoint(-25);
		
	}

	private final SpeedController shooterMotor = RobotMap.shooterShooterMotor;
    private final SpeedController shooterFeed = RobotMap.shooterShooterFeed;
    private final Encoder quadratureEncoder = RobotMap.shooterQuadratureEncoder;
    public boolean startFeeding = false;


    public void initDefaultCommand() {
        setDefaultCommand(new ShooterTune());
    }
    public void Tuning(double speed){
    	shooterMotor.set(speed);
    }
    public void Murder() {
    	//enable();
    	//SmartDashboard.putBoolean("startFeeding", startFeeding);
    	if( startFeeding) shooterFeed.set(0.001);
    	else shooterFeed.set(0.0);
    }
    
    public void LessMurder() {
    	disable();
    }

	@Override
	protected double returnPIDInput() {
		// TODO Auto-generated method stub
		return quadratureEncoder.getRate();
	}

	@Override
	protected void usePIDOutput(double output) {
		// TODO Auto-generated method stub
		shooterMotor.pidWrite(output);
	}
    
}

